

<?php
require_once "app/models/UserModel.php";
require_once "app/config/database.php";

class AuthApiController
{
    private $userModel;
    private $db;

    public function __construct()
    {
        $this->db = (new Database())->getConnection();
        $this->userModel = new UserModel($this->db);
    }

    // üü¢ ƒêƒÉng k√Ω User
    public function register()
    {
        header("Content-Type: application/json");
        $data = json_decode(file_get_contents("php://input"), true);

        if (!isset($data['username']) || !isset($data['email']) || !isset($data['password'])) {
            echo json_encode(["error" => "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin"]);
            return;
        }

        $role = $data['role'] ?? 'User'; // M·∫∑c ƒë·ªãnh l√† User n·∫øu kh√¥ng truy·ªÅn role
        $result = $this->userModel->register($data['username'], $data['email'], $data['password'], $role);

        echo json_encode($result);
    }

    // üü¢ ƒêƒÉng nh·∫≠p
    public function login()
    {
        header("Content-Type: application/json");
        $data = json_decode(file_get_contents("php://input"));

        if (!isset($data->email) || !isset($data->password)) {
            echo json_encode(["error" => "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin"]);
            return;
        }

        $user = $this->userModel->login($data->email, $data->password);

        if ($user) {
    
            echo json_encode([
                "message" => "ƒêƒÉng nh·∫≠p th√†nh c√¥ng",
                "user" => [
                    "id" => $user["id"],
                    "username" => $user["username"],
                    "email" => $user["email"],
                    "role" => $user["role"]
                ],
              
                "token" => bin2hex(random_bytes(32)) // Token gi·∫£ l·∫≠p
            ]);
        } else {
            echo json_encode(["error" => "Sai email ho·∫∑c m·∫≠t kh·∫©u"]);
        }
        
    }

    // üü¢ ƒêƒÉng xu·∫•t
    public function logout()
    {
        header("Content-Type: application/json");
        // X√≥a token ho·∫∑c th·ª±c hi·ªán c√°c thao t√°c kh√°c ƒë·ªÉ ƒëƒÉng xu·∫•t
        echo json_encode(["message" => "ƒêƒÉng xu·∫•t th√†nh c√¥ng"]);
    }

    // üü¢ L·∫•y th√¥ng tin ng∆∞·ªùi d√πng theo ID
    public function show($userId)
    {
        
        $user = $this->userModel->getUserById($userId);

        if ($user) {
            echo json_encode($user);
        } else {
            echo json_encode(["error" => "Ng∆∞·ªùi d√πng kh√¥ng t·ªìn t·∫°i"]);
        }
    }
// Trong class AuthApiController
public function update($userId)
{
    header("Content-Type: application/json");
    $data = json_decode(file_get_contents("php://input"), true);

    if (empty($userId) || empty($data)) {
        echo json_encode(["error" => "D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá"]);
        return;
    }

    $result = $this->userModel->updateuser(
        $userId,
        $data['username'] ?? null,
        $data['email'] ?? null,
        $data['role'] ?? null
    );

    echo json_encode($result);
}
    // üü¢ X√≥a ng∆∞·ªùi d√πng
    public function destroy($userId)
    {
        header("Content-Type: application/json");
        $result = $this->userModel->deleteuser($userId);

        echo json_encode($result);
    }
    // üü¢ L·∫•y danh s√°ch ng∆∞·ªùi d√πng
    public function index()
    {
        header("Content-Type: application/json");
        $users = $this->userModel->getAllUsers();

        if ($users) {
            echo json_encode($users);
        } else {
            echo json_encode(["error" => "Kh√¥ng c√≥ ng∆∞·ªùi d√πng n√†o"]);
        }
    }
}

